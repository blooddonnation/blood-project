version: '3.8'
services:
  eureka:
    build:
      context: ./euroka/eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - app-network

  auth-service:
    build:
      context: ./blod/auth-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/authdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      eureka:
        condition: service_started
    networks:
      - app-network

  donation-history-service:
    build:
      context: ./blood1/donation-history-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/blooddonation_db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
      - eureka
    networks:
      - app-network

  request-post:
    build:
      context: ./majda/Request_post
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bloody_donation
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - app-network

  microservice-banque:
    build:
      context: ./raja/Microservice_Banque
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/MicroserverBanque
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - app-network

  position-tracking:
    build:
      context: ./l9ssir/positionTracking
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/position
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    depends_on:
      - mongodb
      - eureka
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=authdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=authdb,bloody_donation,MicroserverBanque
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

volumes:
  postgres-data:
  mongodb_data:

networks:
  app-network:
    driver: bridge